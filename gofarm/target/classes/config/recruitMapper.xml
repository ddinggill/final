<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="recruit">
	<!--채용 첫 화면에 정보제공 -->
	<select id="job" resultType="com.mycompany.gofarm.job.dto.JobDTO">
		select * from job order by job desc
	</select>


	<!--인력 첫 화면에 정보제공 -->
	<select id="jobsearch" resultType="com.mycompany.gofarm.job.dto.JobSearchDTO">
		select * from jobsearch order
		by jobsearchcode desc
	</select>

	<!-- 채용 페이징 하기위한 숫자세기 -->
	<select id="count" resultType="int">
		select count(*) from job
	</select>

	<!-- 구직자 페이징 하기위한 숫자세기 -->
	<select id="count_person" resultType="int">
		select count(*) from
		jobsearch
	</select>


	<!-- 페이징 하기 위한 리스트 -->
	<select id="job_list" parameterType="com.mycompany.gofarm.job.dto.PageDTO"
		resultType="com.mycompany.gofarm.job.dto.JobDTO">
   <![CDATA[
  select b.job,b.usercode,b.j_company, to_char(b.j_registration,'yyyy.mm.dd')as j_registration, to_char(b.j_deadline,'yyyy.mm.dd')as j_deadline,
        b.j_area, b.j_recruitment, b.j_career, b.j_gender, b.j_age, b.j_type,b.j_term, b.j_info, b.j_address, b.j_preferential,
        b.content, b.j_contact from
   (select rownum as rm, a.* from (
   select * from job order by job desc)a)b
   where b.rm>= #{startRow} and b.rm <= #{endRow}
   ]]>
	</select>


	<!-- 구인 페이징 하기 위한 리스트 -->
	<select id="jobsearch_list" parameterType="com.mycompany.gofarm.job.dto.PageDTO"
		resultType="com.mycompany.gofarm.job.dto.JobSearchDTO">
   <![CDATA[
   select b.* from
   (select rownum as rm, a.* from (
   select * from jobsearch order by jobsearchcode desc)a)b
   where b.rm>= #{startRow} and b.rm <= #{endRow}
   ]]>
	</select>

	<!-- 구직 상세 뷰 -->
	<select id="resum" parameterType="int"
		resultType="com.mycompany.gofarm.job.dto.JobDTO">
		select JOB , USERCODE,J_COMPANY,
		J_REGISTRATION,J_DEADLINE,J_AREA
		,J_RECRUITMENT,J_CAREER,J_GENDER,J_AGE,J_TYPE,J_TERM,J_INFO,J_ADDRESS
		,J_PREFERENTIAL,CONTENT,J_CONTACT from job where job=#{job}

	</select>

	<!-- 구인 상세 뷰 -->
	<select id="personlist" parameterType="int"
		resultType="com.mycompany.gofarm.job.dto.JobSearchDTO">
		select * from jobsearch where
		jobsearchcode=#{jobsearchcode}

	</select>

	<!-- usercode 중복 확인 -->
	<select id="jusercodecount" parameterType="int" resultType="int">
		select count(*) from job where usercode=#{usercode}
	</select>
	
	<select id="jsusercodecount" resultType="int" parameterType="int">
		select count(*) from jobsearch where usercode=#{usercode}
	</select>
	
	<!-- 이력서 -->
	<insert id="resume" parameterType="com.mycompany.gofarm.job.dto.JobSearchDTO">
		insert into jobsearch
		values(jobsearch_seq.nextval,#{usercode},#{js_name},sysdate,#{js_area},#{js_crop},
		#{js_time},#{js_salary},#{js_address},#{js_phone},#{js_intro},#{js_age},#{js_gender})
		<selectKey keyProperty="jobsearchcode" resultType="Integer"
			order="AFTER">
			SELECT jobsearch_seq.currval FROM dual
		</selectKey>

	</insert>
	<!-- 커리어 인서트 -->
	<insert id="career" parameterType="java.util.List">

		<foreach collection="list" item="dto" open="insert all"
			close="select * from dual" separator=" ">
			into career(jobsearchcode , career, startdate, enddate)
			values(#{dto.jobsearchcode},#{dto.career},#{dto.startdate},#{dto.enddate})
		</foreach>


	</insert>
	
	<!-- 채용정보 -->
	<insert id="person" parameterType="com.mycompany.gofarm.job.dto.JobDTO">
		insert into job values
		(JOB_SEQ.nextval,#{usercode},#{j_company},
		sysdate,#{j_deadline},#{j_area},#{j_recruitment},#{j_career},#{j_gender},#{j_age},#{j_type},#{j_term},#{j_info},#{j_address},#{j_preferential},#{content},#{j_contact})
	</insert>

	<!-- 이력서 구독자 유저코드 값 넣기 -->

	<insert id="jobcheck" parameterType="com.mycompany.gofarm.job.dto.JobCheckDTO">
		insert into jobcheck values
		(#{jobsearchcode},#{jk_usercode})
	</insert>

	   <!-- 유저가 한번만 봤을때 count 해주는거 확인 -->
   <select id="view_chk" resultType="int" parameterType="com.mycompany.gofarm.job.dto.JobCheckDTO">
      select count(*)
      from jobcheck
      where jk_usercode=#{jk_usercode} and jobsearchcode=#{jobsearchcode}
   </select>
   
   <!-- 유저가 구인글 올렸는지 확인 -->
   <select id="chk" resultType="int" parameterType="com.mycompany.gofarm.job.dto.JobCheckDTO">
   	select count(*)
   	from job
   	where usercode=#{jk_usercode}
   </select>

	<!-- 구인글 쓴 유저정보 얻어오기 -->
	<select id="getinfo" parameterType="int"
		resultType="com.mycompany.gofarm.user.dto.UserDTO">
		select * from users
		where usercode=#{usercode}
	</select>
	
	<!-- 경력가져오기 -->
	<select id="careerlist" parameterType="int" resultType="com.mycompany.gofarm.job.dto.CareerDTO">
		select * from career where jobsearchcode=#{jobsearchcode}
	</select>
</mapper>